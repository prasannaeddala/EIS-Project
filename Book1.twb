<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20223.22.1005.1835                               -->
<workbook original-version='18.1' source-build='2022.3.0 (20223.22.1005.1835)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource caption='Sheet1 (final)' inline='true' name='federated.03nhya912lqb8u1c949201xpxhjj' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='final' name='excel-direct.0vbfgjf0166u2416crtr70xlcntc'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/csara/Documents/final.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
          <named-connection caption='final_2' name='excel-direct.08bt57i1ul6p07180dcui19hcj01'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/csara/Documents/final_2.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='excel-direct.08bt57i1ul6p07180dcui19hcj01' name='Sheet11' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:I9:no:A1:I9:0' header='yes' outcome='6'>
            <column datatype='string' name='corridors' ordinal='0' />
            <column datatype='real' name='mean_just_value' ordinal='1' />
            <column datatype='real' name='median_just_value' ordinal='2' />
            <column datatype='real' name='mean_non_school_district_assesed' ordinal='3' />
            <column datatype='real' name='median_non_school_district_assesed' ordinal='4' />
            <column datatype='real' name='mean_taxable' ordinal='5' />
            <column datatype='real' name='median_taxable' ordinal='6' />
            <column datatype='real' name='mean_land' ordinal='7' />
            <column datatype='real' name='median_land' ordinal='8' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='excel-direct.0vbfgjf0166u2416crtr70xlcntc' name='Sheet1' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:I9:no:A1:I9:0' header='yes' outcome='6'>
              <column datatype='string' name='corridors' ordinal='0' />
              <column datatype='real' name='mean_just_value' ordinal='1' />
              <column datatype='real' name='median_just_value' ordinal='2' />
              <column datatype='real' name='mean_non_school_district_assesed' ordinal='3' />
              <column datatype='real' name='median_non_school_district_assesed' ordinal='4' />
              <column datatype='real' name='mean_taxable' ordinal='5' />
              <column datatype='real' name='median_taxable' ordinal='6' />
              <column datatype='real' name='mean_land' ordinal='7' />
              <column datatype='real' name='median_land' ordinal='8' />
            </columns>
          </relation>
          <relation connection='excel-direct.08bt57i1ul6p07180dcui19hcj01' name='Sheet11' table='[Sheet1$]' type='table'>
            <columns gridOrigin='A1:I9:no:A1:I9:0' header='yes' outcome='6'>
              <column datatype='string' name='corridors' ordinal='0' />
              <column datatype='real' name='mean_just_value' ordinal='1' />
              <column datatype='real' name='median_just_value' ordinal='2' />
              <column datatype='real' name='mean_non_school_district_assesed' ordinal='3' />
              <column datatype='real' name='median_non_school_district_assesed' ordinal='4' />
              <column datatype='real' name='mean_taxable' ordinal='5' />
              <column datatype='real' name='median_taxable' ordinal='6' />
              <column datatype='real' name='mean_land' ordinal='7' />
              <column datatype='real' name='median_land' ordinal='8' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <cols>
          <map key='[corridors (Sheet11)]' value='[Sheet11].[corridors]' />
          <map key='[corridors]' value='[Sheet1].[corridors]' />
          <map key='[mean_just_value (Sheet11)]' value='[Sheet11].[mean_just_value]' />
          <map key='[mean_just_value]' value='[Sheet1].[mean_just_value]' />
          <map key='[mean_land (Sheet11)]' value='[Sheet11].[mean_land]' />
          <map key='[mean_land]' value='[Sheet1].[mean_land]' />
          <map key='[mean_non_school_district_assesed (Sheet11)]' value='[Sheet11].[mean_non_school_district_assesed]' />
          <map key='[mean_non_school_district_assesed]' value='[Sheet1].[mean_non_school_district_assesed]' />
          <map key='[mean_taxable (Sheet11)]' value='[Sheet11].[mean_taxable]' />
          <map key='[mean_taxable]' value='[Sheet1].[mean_taxable]' />
          <map key='[median_just_value (Sheet11)]' value='[Sheet11].[median_just_value]' />
          <map key='[median_just_value]' value='[Sheet1].[median_just_value]' />
          <map key='[median_land (Sheet11)]' value='[Sheet11].[median_land]' />
          <map key='[median_land]' value='[Sheet1].[median_land]' />
          <map key='[median_non_school_district_assesed (Sheet11)]' value='[Sheet11].[median_non_school_district_assesed]' />
          <map key='[median_non_school_district_assesed]' value='[Sheet1].[median_non_school_district_assesed]' />
          <map key='[median_taxable (Sheet11)]' value='[Sheet11].[median_taxable]' />
          <map key='[median_taxable]' value='[Sheet1].[median_taxable]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I9:no:A1:I9:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:I9:no:A1:I9:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>corridors</remote-name>
            <remote-type>130</remote-type>
            <local-name>[corridors]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>corridors</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AB1E2ED532924994919E867686B173AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_just_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_just_value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>mean_just_value</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AB1E2ED532924994919E867686B173AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_just_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_just_value]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>median_just_value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AB1E2ED532924994919E867686B173AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_non_school_district_assesed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_non_school_district_assesed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>mean_non_school_district_assesed</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AB1E2ED532924994919E867686B173AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_non_school_district_assesed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_non_school_district_assesed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>median_non_school_district_assesed</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AB1E2ED532924994919E867686B173AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_taxable</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_taxable]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>mean_taxable</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AB1E2ED532924994919E867686B173AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_taxable</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_taxable]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>median_taxable</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AB1E2ED532924994919E867686B173AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_land</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_land]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>mean_land</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AB1E2ED532924994919E867686B173AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_land</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_land]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>median_land</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_AB1E2ED532924994919E867686B173AF]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>corridors</remote-name>
            <remote-type>130</remote-type>
            <local-name>[corridors (Sheet11)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>corridors</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_200B7B54882F403882E925861C95CE97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_just_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_just_value (Sheet11)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>mean_just_value</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_200B7B54882F403882E925861C95CE97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_just_value</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_just_value (Sheet11)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>median_just_value</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_200B7B54882F403882E925861C95CE97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_non_school_district_assesed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_non_school_district_assesed (Sheet11)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>mean_non_school_district_assesed</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_200B7B54882F403882E925861C95CE97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_non_school_district_assesed</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_non_school_district_assesed (Sheet11)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>median_non_school_district_assesed</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_200B7B54882F403882E925861C95CE97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_taxable</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_taxable (Sheet11)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>mean_taxable</remote-alias>
            <ordinal>14</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_200B7B54882F403882E925861C95CE97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_taxable</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_taxable (Sheet11)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>median_taxable</remote-alias>
            <ordinal>15</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_200B7B54882F403882E925861C95CE97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mean_land</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mean_land (Sheet11)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>mean_land</remote-alias>
            <ordinal>16</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_200B7B54882F403882E925861C95CE97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>median_land</remote-name>
            <remote-type>5</remote-type>
            <local-name>[median_land (Sheet11)]</local-name>
            <parent-name>[Sheet11]</parent-name>
            <remote-alias>median_land</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[Sheet1_200B7B54882F403882E925861C95CE97]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:mean_just_value (Sheet11):qk]&quot;' value='just value 2022' />
          <alias key='&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:mean_just_value:qk]&quot;' value='just value 2015' />
          <alias key='&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:median_just_value (Sheet11):qk]&quot;' value='Just Value 2022' />
          <alias key='&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:median_just_value:qk]&quot;' value='Just Value 2015' />
        </aliases>
      </column>
      <column caption='rank_just_value' datatype='integer' name='[Calculation_1864771731024420864]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(Sum([mean_just_value (Sheet11)] - [mean_just_value]), &apos;asc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank_non_school' datatype='integer' name='[Calculation_1864771731175026689]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(Sum([mean_non_school_district_assesed (Sheet11)] - [mean_non_school_district_assesed]), &apos;asc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Rank_taxable' datatype='integer' name='[Calculation_1864771731175411714]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK(Sum([mean_taxable (Sheet11)] - [mean_taxable]), &apos;asc&apos;)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='Sheet11' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_200B7B54882F403882E925861C95CE97]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='Sheet1' datatype='table' name='[__tableau_internal_object_id__].[Sheet1_AB1E2ED532924994919E867686B173AF]' role='measure' type='quantitative' />
      <column caption='Corridors' datatype='string' name='[corridors]' role='dimension' type='nominal' />
      <column caption='mean just value (Sheet11)' datatype='real' name='[mean_just_value (Sheet11)]' role='measure' type='quantitative' />
      <column caption='Mean Just Value' datatype='real' name='[mean_just_value]' role='measure' type='quantitative' />
      <column caption='mean land (Sheet11)' datatype='real' name='[mean_land (Sheet11)]' role='measure' type='quantitative' />
      <column caption='Mean Land' datatype='real' name='[mean_land]' role='measure' type='quantitative' />
      <column caption='mean non school district assesed (Sheet11)' datatype='real' name='[mean_non_school_district_assesed (Sheet11)]' role='measure' type='quantitative' />
      <column caption='Mean Non School District Assesed' datatype='real' name='[mean_non_school_district_assesed]' role='measure' type='quantitative' />
      <column caption='mean taxable (Sheet11)' datatype='real' name='[mean_taxable (Sheet11)]' role='measure' type='quantitative' />
      <column caption='Mean Taxable' datatype='real' name='[mean_taxable]' role='measure' type='quantitative' />
      <column caption='median just value (Sheet11)' datatype='real' name='[median_just_value (Sheet11)]' role='measure' type='quantitative' />
      <column caption='Median Just Value' datatype='real' name='[median_just_value]' role='measure' type='quantitative' />
      <column caption='median land (Sheet11)' datatype='real' name='[median_land (Sheet11)]' role='measure' type='quantitative' />
      <column caption='Median Land' datatype='real' name='[median_land]' role='measure' type='quantitative' />
      <column caption='median non school district assesed (Sheet11)' datatype='real' name='[median_non_school_district_assesed (Sheet11)]' role='measure' type='quantitative' />
      <column caption='Median Non School District Assesed' datatype='real' name='[median_non_school_district_assesed]' role='measure' type='quantitative' />
      <column caption='median taxable (Sheet11)' datatype='real' name='[median_taxable (Sheet11)]' role='measure' type='quantitative' />
      <column caption='Median Taxable' datatype='real' name='[median_taxable]' role='measure' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Sheet1_200B7B54882F403882E925861C95CE97]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Sheet1_200B7B54882F403882E925861C95CE97:qk]' pivot='key' type='quantitative' />
      <column-instance column='[__tableau_internal_object_id__].[Sheet1_AB1E2ED532924994919E867686B173AF]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:Sheet1_AB1E2ED532924994919E867686B173AF:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean_just_value (Sheet11)]' derivation='Sum' name='[sum:mean_just_value (Sheet11):qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean_just_value]' derivation='Sum' name='[sum:mean_just_value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean_land (Sheet11)]' derivation='Sum' name='[sum:mean_land (Sheet11):qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean_land]' derivation='Sum' name='[sum:mean_land:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean_non_school_district_assesed (Sheet11)]' derivation='Sum' name='[sum:mean_non_school_district_assesed (Sheet11):qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean_non_school_district_assesed]' derivation='Sum' name='[sum:mean_non_school_district_assesed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean_taxable (Sheet11)]' derivation='Sum' name='[sum:mean_taxable (Sheet11):qk]' pivot='key' type='quantitative' />
      <column-instance column='[mean_taxable]' derivation='Sum' name='[sum:mean_taxable:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_just_value (Sheet11)]' derivation='Sum' name='[sum:median_just_value (Sheet11):qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_just_value]' derivation='Sum' name='[sum:median_just_value:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_land (Sheet11)]' derivation='Sum' name='[sum:median_land (Sheet11):qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_land]' derivation='Sum' name='[sum:median_land:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_non_school_district_assesed (Sheet11)]' derivation='Sum' name='[sum:median_non_school_district_assesed (Sheet11):qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_non_school_district_assesed]' derivation='Sum' name='[sum:median_non_school_district_assesed:qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_taxable (Sheet11)]' derivation='Sum' name='[sum:median_taxable (Sheet11):qk]' pivot='key' type='quantitative' />
      <column-instance column='[median_taxable]' derivation='Sum' name='[sum:median_taxable:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1864771731024420864]' derivation='User' name='[usr:Calculation_1864771731024420864:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1864771731175026689]' derivation='User' name='[usr:Calculation_1864771731175026689:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <column-instance column='[Calculation_1864771731175411714]' derivation='User' name='[usr:Calculation_1864771731175411714:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Rows' />
      </column-instance>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#005500'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:median_just_value:qk]&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:median_land:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:mean_just_value:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[usr:Calculation_1864771731175026689:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:mean_land:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[usr:Calculation_1864771731175026689:qk]:1&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:mean_non_school_district_assesed (Sheet11):qk]&quot;</bucket>
            </map>
            <map to='#85ca77'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:median_just_value (Sheet11):qk]&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:median_non_school_district_assesed:qk]&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:mean_non_school_district_assesed:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[__tableau_internal_object_id__].[cnt:Sheet1_AB1E2ED532924994919E867686B173AF:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:median_non_school_district_assesed (Sheet11):qk]&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:mean_taxable:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:mean_taxable (Sheet11):qk]&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:median_taxable (Sheet11):qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:median_taxable:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[usr:Calculation_1864771731175411714:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:mean_just_value (Sheet11):qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[usr:Calculation_1864771731024420864:qk]&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:median_land (Sheet11):qk]&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:mean_land (Sheet11):qk]&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[__tableau_internal_object_id__].[cnt:Sheet1_200B7B54882F403882E925861C95CE97:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='Sheet11' id='Sheet1_200B7B54882F403882E925861C95CE97'>
            <properties context=''>
              <relation connection='excel-direct.08bt57i1ul6p07180dcui19hcj01' name='Sheet11' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:I9:no:A1:I9:0' header='yes' outcome='6'>
                  <column datatype='string' name='corridors' ordinal='0' />
                  <column datatype='real' name='mean_just_value' ordinal='1' />
                  <column datatype='real' name='median_just_value' ordinal='2' />
                  <column datatype='real' name='mean_non_school_district_assesed' ordinal='3' />
                  <column datatype='real' name='median_non_school_district_assesed' ordinal='4' />
                  <column datatype='real' name='mean_taxable' ordinal='5' />
                  <column datatype='real' name='median_taxable' ordinal='6' />
                  <column datatype='real' name='mean_land' ordinal='7' />
                  <column datatype='real' name='median_land' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Sheet1' id='Sheet1_AB1E2ED532924994919E867686B173AF'>
            <properties context=''>
              <relation connection='excel-direct.0vbfgjf0166u2416crtr70xlcntc' name='Sheet1' table='[Sheet1$]' type='table'>
                <columns gridOrigin='A1:I9:no:A1:I9:0' header='yes' outcome='6'>
                  <column datatype='string' name='corridors' ordinal='0' />
                  <column datatype='real' name='mean_just_value' ordinal='1' />
                  <column datatype='real' name='median_just_value' ordinal='2' />
                  <column datatype='real' name='mean_non_school_district_assesed' ordinal='3' />
                  <column datatype='real' name='median_non_school_district_assesed' ordinal='4' />
                  <column datatype='real' name='mean_taxable' ordinal='5' />
                  <column datatype='real' name='median_taxable' ordinal='6' />
                  <column datatype='real' name='mean_land' ordinal='7' />
                  <column datatype='real' name='median_land' ordinal='8' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[corridors]' />
              <expression op='[corridors (Sheet11)]' />
            </expression>
            <first-end-point object-id='Sheet1_AB1E2ED532924994919E867686B173AF' />
            <second-end-point object-id='Sheet1_200B7B54882F403882E925861C95CE97' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 4'>
      <table>
        <view>
          <datasources />
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{22EF92B4-F4A1-4C5D-8CF7-71E5E64B1624}' />
    </worksheet>
    <worksheet name='just value mean'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Average Just Value per sqft between 2015 and 2022
</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (final)' name='federated.03nhya912lqb8u1c949201xpxhjj' />
          </datasources>
          <datasource-dependencies datasource='federated.03nhya912lqb8u1c949201xpxhjj'>
            <column caption='Corridors' datatype='string' name='[corridors]' role='dimension' type='nominal' />
            <column caption='mean just value (Sheet11)' datatype='real' name='[mean_just_value (Sheet11)]' role='measure' type='quantitative' />
            <column caption='Mean Just Value' datatype='real' name='[mean_just_value]' role='measure' type='quantitative' />
            <column-instance column='[corridors]' derivation='None' name='[none:corridors:nk]' pivot='key' type='nominal' />
            <column-instance column='[mean_just_value (Sheet11)]' derivation='Sum' name='[sum:mean_just_value (Sheet11):qk]' pivot='key' type='quantitative' />
            <column-instance column='[mean_just_value]' derivation='Sum' name='[sum:mean_just_value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:mean_just_value:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:mean_just_value (Sheet11):qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:mean_just_value:qk]&quot;</bucket>
              <bucket>&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:mean_just_value (Sheet11):qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]' value='85' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.03nhya912lqb8u1c949201xpxhjj].[none:corridors:nk]' value='10' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.03nhya912lqb8u1c949201xpxhjj].[none:corridors:nk]' value='bold' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]' value='180' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]' />
              <text column='[federated.03nhya912lqb8u1c949201xpxhjj].[Multiple Values]' />
              <lod column='[federated.03nhya912lqb8u1c949201xpxhjj].[sum:mean_just_value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03nhya912lqb8u1c949201xpxhjj].[Multiple Values]</rows>
        <cols>([federated.03nhya912lqb8u1c949201xpxhjj].[none:corridors:nk] / [federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{E8A21CBF-F56B-4363-B74E-A6524980EC81}' />
    </worksheet>
    <worksheet name='just value median'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Median Just value per sqft between 2015 and 2022</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (final)' name='federated.03nhya912lqb8u1c949201xpxhjj' />
          </datasources>
          <datasource-dependencies datasource='federated.03nhya912lqb8u1c949201xpxhjj'>
            <column caption='Corridors' datatype='string' name='[corridors]' role='dimension' type='nominal' />
            <column caption='median just value (Sheet11)' datatype='real' name='[median_just_value (Sheet11)]' role='measure' type='quantitative' />
            <column caption='Median Just Value' datatype='real' name='[median_just_value]' role='measure' type='quantitative' />
            <column-instance column='[corridors]' derivation='None' name='[none:corridors:nk]' pivot='key' type='nominal' />
            <column-instance column='[median_just_value (Sheet11)]' derivation='Sum' name='[sum:median_just_value (Sheet11):qk]' pivot='key' type='quantitative' />
            <column-instance column='[median_just_value]' derivation='Sum' name='[sum:median_just_value:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:median_just_value:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.03nhya912lqb8u1c949201xpxhjj].[sum:median_just_value (Sheet11):qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]' value='85' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-weight' field='[federated.03nhya912lqb8u1c949201xpxhjj].[none:corridors:nk]' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]' />
              <text column='[federated.03nhya912lqb8u1c949201xpxhjj].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.03nhya912lqb8u1c949201xpxhjj].[Multiple Values]</rows>
        <cols>([federated.03nhya912lqb8u1c949201xpxhjj].[none:corridors:nk] / [federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{69DC20AC-A5A4-421C-BD9D-EE495328D0C0}' />
    </worksheet>
    <worksheet name='rank'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (final)' name='federated.03nhya912lqb8u1c949201xpxhjj' />
          </datasources>
          <datasource-dependencies datasource='federated.03nhya912lqb8u1c949201xpxhjj'>
            <column caption='rank_just_value' datatype='integer' name='[Calculation_1864771731024420864]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(Sum([mean_just_value (Sheet11)] - [mean_just_value]), &apos;asc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank_non_school' datatype='integer' name='[Calculation_1864771731175026689]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(Sum([mean_non_school_district_assesed (Sheet11)] - [mean_non_school_district_assesed]), &apos;asc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Rank_taxable' datatype='integer' name='[Calculation_1864771731175411714]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK(Sum([mean_taxable (Sheet11)] - [mean_taxable]), &apos;asc&apos;)'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Corridors' datatype='string' name='[corridors]' role='dimension' type='nominal' />
            <column caption='mean just value (Sheet11)' datatype='real' name='[mean_just_value (Sheet11)]' role='measure' type='quantitative' />
            <column caption='Mean Just Value' datatype='real' name='[mean_just_value]' role='measure' type='quantitative' />
            <column caption='mean non school district assesed (Sheet11)' datatype='real' name='[mean_non_school_district_assesed (Sheet11)]' role='measure' type='quantitative' />
            <column caption='Mean Non School District Assesed' datatype='real' name='[mean_non_school_district_assesed]' role='measure' type='quantitative' />
            <column caption='mean taxable (Sheet11)' datatype='real' name='[mean_taxable (Sheet11)]' role='measure' type='quantitative' />
            <column caption='Mean Taxable' datatype='real' name='[mean_taxable]' role='measure' type='quantitative' />
            <column-instance column='[corridors]' derivation='None' name='[none:corridors:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1864771731024420864]' derivation='User' name='[usr:Calculation_1864771731024420864:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1864771731175026689]' derivation='User' name='[usr:Calculation_1864771731175026689:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
            <column-instance column='[Calculation_1864771731175411714]' derivation='User' name='[usr:Calculation_1864771731175411714:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' />
            </column-instance>
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.03nhya912lqb8u1c949201xpxhjj].[usr:Calculation_1864771731024420864:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.03nhya912lqb8u1c949201xpxhjj].[usr:Calculation_1864771731175411714:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.03nhya912lqb8u1c949201xpxhjj].[usr:Calculation_1864771731175026689:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.03nhya912lqb8u1c949201xpxhjj].[usr:Calculation_1864771731024420864:qk] + ([federated.03nhya912lqb8u1c949201xpxhjj].[usr:Calculation_1864771731175411714:qk] + [federated.03nhya912lqb8u1c949201xpxhjj].[usr:Calculation_1864771731175026689:qk]))</rows>
        <cols>[federated.03nhya912lqb8u1c949201xpxhjj].[none:corridors:nk]</cols>
      </table>
      <simple-id uuid='{B3AA20BD-D034-4B54-A7A3-E0A9E59C15BA}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='1200' maxwidth='1200' minheight='1200' minwidth='1200' sizing-mode='fixed' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='83583' id='7' param='horz' type-v2='layout-flow' w='98500' x='750' y='15667'>
            <zone h='83583' id='5' type-v2='layout-basic' w='98500' x='750' y='15667'>
              <zone h='39899' id='3' name='just value mean' w='98500' x='750' y='15667'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='43684' id='9' name='just value median' w='98500' x='750' y='55566'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone forceUpdate='true' h='9000' id='10' type-v2='text' w='98500' x='750' y='750'>
            <formatted-text>
              <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='15'>Just Value per sqft between 2015 and 2022</run>
              <run fontalignment='1'>Æ&#10;</run>
              <run>Æ&#10;</run>
              <run bold='true' fontcolor='#ffffff' fontsize='10'>Just value is the market value of any property which one may expect to sell for</run>
              <run>Æ&#10;</run>
            </formatted-text>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='solid' />
              <format attr='border-width' value='1' />
              <format attr='margin' value='4' />
              <format attr='background-color' value='#005500' />
            </zone-style>
          </zone>
          <zone h='5917' id='8' name='just value mean' pane-specification-id='0' param='[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]' type-v2='color' w='98500' x='750' y='9750'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='14' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98666' id='13' param='vert' type-v2='layout-flow' w='98666' x='667' y='667'>
                <zone forceUpdate='true' h='9000' id='10' type-v2='text' w='98500' x='750' y='750'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontsize='15'>Just Value per sqft between 2015 and 2022</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run>Æ&#10;</run>
                    <run bold='true' fontcolor='#ffffff' fontsize='10'>Just value is the market value of any property which one may expect to sell for</run>
                    <run>Æ&#10;</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#005500' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39899' id='3' is-fixed='true' name='just value mean' w='98500' x='750' y='15667'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='5917' id='8' name='just value mean' pane-specification-id='0' param='[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]' type-v2='color' w='98500' x='750' y='9750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='43684' id='9' is-fixed='true' name='just value median' w='98500' x='750' y='55566'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{93F9253F-2FFF-4EFA-8A6B-B711E68C31D9}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='44'>
    <window class='worksheet' name='just value mean'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]</field>
            <field>[federated.03nhya912lqb8u1c949201xpxhjj].[none:corridors:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{415A53F6-6AB7-4BB0-A956-8D6FC4B87727}' />
    </window>
    <window class='worksheet' name='just value median'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]</field>
            <field>[federated.03nhya912lqb8u1c949201xpxhjj].[none:corridors:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F59AC28C-1E37-40A7-817A-CFFBB5EC458A}' />
    </window>
    <window class='worksheet' maximized='true' name='rank'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.03nhya912lqb8u1c949201xpxhjj].[none:corridors:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{6C8E7A71-3894-4992-87D2-7ABB0704980A}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D4A02CF3-E45B-45B9-8052-4493CFBA6961}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='just value mean'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.03nhya912lqb8u1c949201xpxhjj].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='just value median'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{59032CA8-705E-48F6-A209-1077894C3A4F}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Sheet 4' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAACFUlEQVR4nO3TMQEAIAzAMMC/5yFjRxMFfXpnZg5Eve0A2GQA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQD
      kGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBp
      BiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA
      0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDN
      AKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxA
      mgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZ
      gDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFI
      MwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKQZgDQDkGYA0gxAmgFIMwBpBiDNAKR9Y+0F
      fBUOM1sAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='just value mean' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='just value median' width='192'>
      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
      8t8BXX3LCrSfwKkAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='rank' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
